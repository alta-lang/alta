import "native.alta" as Native
import ObjectStack from "stack.alta"
import ErrorContainer from "errors.alta"
import FunctionTable, SymbolTable from "tables.alta"
import Exception from "exceptions"

export class InvalidHandle extends Exception {}

export class Runtime {
  private var handle: ptr Native._Alta_global_runtime_type = nullptr

  public @from constructor(handle: ptr Native._Alta_global_runtime_type) {
    this.handle = handle
  }

  public to ptr Native._Alta_global_runtime_type {
    return this.handle
  }

  public function initialize(): ref Runtime {
    if this.handle != &Native._Alta_global_runtime
      throw new InvalidHandle
    Native._Alta_init_global_runtime()
    return this
  }
  public function deinitialize(): ref Runtime {
    if this.handle != &Native._Alta_global_runtime
      throw new InvalidHandle
    Native._Alta_unwind_global_runtime()
    return this
  }

  public @read function locals(): ObjectStack {
    return &this.handle.local
  }

  public @read function lastError(): ErrorContainer {
    return &this.handle.lastError
  }

  public @read function functionTable(): FunctionTable {
    return &this.handle.functionTable
  }

  public @read function symbolTable(): SymbolTable {
    return &this.handle.symbolTable
  }
}

export var globalRuntime = new Runtime(&Native._Alta_global_runtime)

export * from "native.alta" as Native
export * from "errors.alta"
export * from "tables.alta"
export * from "stack.alta"
