import Size from "types"
import IndexOutOfBounds from "exceptions"

export generic class WeakArray<T> {
  private var handle: ptr T = nullptr
  private var _length: Size = 0

  public constructor(handle: ptr T, size: Size) {
    this.handle = handle
    this._length = size
  }

  public to ptr T {
    return this.handle
  }

  public @read function length(): Size {
    return this._length
  }

  public this[Size]: ref T {
    if $ >= this._length
      throw new IndexOutOfBounds
    return this.handle[$]
  }
}
