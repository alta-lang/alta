import malloc from "memory"
import Size, rawstring, rawconststring from "types"

export function rawstringLength(str: rawstring): Size {
  let i: Size = 0
  while str[i] != 0 {
    i = i + 1
  }
  return i
}

export class String {
  private var _data: rawstring = 0
  private var _length: Size = 0
  public constructor() {
    this._data = malloc(1) as rawstring
    this._data[0] = 0
  }
  public constructor(data: rawstring) {
    this._length = rawstringLength(data)
    this._data = malloc(this._length + 1) as rawstring

    let i: Size = 0
    while i < this._length {
      this._data[i] = data[i]
      i = i + 1
    }

    this._data[this._length] = 0
  }

  public function charAt(i: Size): ref byte {
    if i > this._length {
      return this._data[this._length]
    }
    return this._data[i]
  }

  @read public function data(): rawconststring {
    return this._data
  }
  @read public function length(): Size {
    return this._length
  }
  @read public function size(): Size {
    return this.length + 1
  }
}
