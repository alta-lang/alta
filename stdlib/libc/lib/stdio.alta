@@CTranspiler.include("stdio.h");

import size_t, NULL from "./stddef.alta"
import va_list from "./stdarg.alta"
import rawconststring, rawstring from "types"

export literal @external @typed struct FILE {}
export literal @external @typed struct fpos_t {}

declare literal export function remove(filename: rawconststring): int
declare literal export function rename(oldname: rawconststring, newname: rawconststring): int
declare literal export function tmpfile(): ptr FILE
declare literal export function tmpnam(destination: rawstring): rawstring

declare literal export function fclose(stream: ptr FILE): int
declare literal export function fflush(stream: ptr FILE): int
declare literal export function fopen(filename: rawconststring, mode: rawconststring): ptr FILE
declare literal export function freopen(filename: rawconststring, mode: rawconststring, stream: ptr FILE): ptr FILE
declare literal export function setbuf(stream: ptr FILE, buffer: rawstring): void
declare literal export function setvbuf(stream: ptr FILE, buffer: rawstring, mode: int, bufferSize: size_t): int

declare literal export function fprintf(stream: ptr FILE, format: rawconststring, @CTranspiler.vararg data: any...): int
declare literal export function fscanf(stream: ptr FILE, format: rawconststring, @CTranspiler.vararg data: any...): int
declare literal export function printf(format: rawconststring, @CTranspiler.vararg data: any...): int
declare literal export function scanf(format: rawconststring, @CTranspiler.vararg data: any...): int

declare literal export function snprintf(buffer: rawstring, size: size_t, format: rawconststring, @CTranspiler.vararg data: any...): int
declare literal export function sprintf(buffer: rawstring, format: rawconststring, @CTranspiler.vararg data: any...): int
declare literal export function sscanf(source: rawconststring, format: rawconststring, @CTranspiler.vararg data: any...): int

declare literal export function vfprintf(stream: ptr FILE, format: rawconststring, data: va_list): int
declare literal export function vfscanf(stream: ptr FILE, format: rawconststring, data: va_list): int
declare literal export function vprintf(format: rawconststring, data: va_list): int
declare literal export function vscanf(format: rawconststring, data: va_list): int

declare literal export function vsnprintf(buffer: rawstring, size: size_t, format: rawconststring, data: va_list): int
declare literal export function vsprintf(buffer: rawstring, format: rawconststring, data: va_list): int
declare literal export function vsscanf(source: rawconststring, format: rawconststring, data: va_list): int

declare literal export function fgetc(stream: ptr FILE): int
declare literal export function fgets(buffer: rawstring, size: size_t, stream: ptr FILE): rawstring
declare literal export function fputc(character: int, stream: ptr FILE): int
declare literal export function fputs(source: rawconststring, stream: ptr FILE): int
declare literal export function getc(stream: ptr FILE): int
declare literal export function getchar(): int
declare literal export function gets(buffer: rawstring): rawstring
declare literal export function putc(character: int, stream: ptr FILE): int
declare literal export function putchar(character: int): int
declare literal export function puts(source: rawconststring): int
declare literal export function ungetc(character: int, stream: ptr FILE): int

declare literal export function fread(buffer: ptr void, elementSize: size_t, count: size_t, stream: ptr FILE): size_t
declare literal export function fwrite(buffer: ptr const void, elementSize: size_t, count: size_t, stream: ptr FILE): size_t

declare literal export function fgetpos(stream: ptr FILE, position: ptr fpos_t): int
declare literal export function fseek(stream: ptr FILE, offset: long int, origin: int): int
declare literal export function fsetpos(stream: ptr FILE, position: ptr const fpos_t): int
declare literal export function ftell(stream: ptr FILE): long int
declare literal export function rewind(stream: ptr FILE): void

declare literal export function clearerr(stream: ptr FILE): void
declare literal export function feof(stream: ptr FILE): int
declare literal export function ferror(stream: ptr FILE): int
declare literal export function perror(message: rawconststring): void

declare literal export var BUFSIZ: const int
declare literal export var EOF: const int
declare literal export var FILENAME_MAX: const int
declare literal export var FOPEN_MAX: const int
declare literal export var L_tmpnam: const int
declare literal export var TMP_MAX: const int

declare literal export var _IOFBF: const int
declare literal export var _IOLBF: const int
declare literal export var _IONBF: const int

declare literal export var SEEK_SET: const int
declare literal export var SEEK_CUR: const int
declare literal export var SEEK_END: const int

declare literal export var stdin: ptr FILE
declare literal export var stdout: ptr FILE
declare literal export var stderr: ptr FILE
