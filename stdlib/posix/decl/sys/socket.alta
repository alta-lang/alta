# TODO: check Windows for these definitions

import Size from "types"
import iovec from "./uio.alta"
import ssize_t from "./types.alta"
import sockaddr from "../netinet/in.alta"
import uint32_t from "libc/lib/stdint"

export type socklen_t = uint32_t

export struct msghdr {
	msg_name: ptr void;
	msg_namelen: socklen_t;
	msg_iov: ptr iovec;
	msg_iovlen: int;
	msg_control: ptr void;
	msg_controllen: socklen_t;
	msg_flags: int;
}

export var AF_UNSPEC: const int = 0
export var AF_UNIX: const int = 1
export var AF_INET: const int = 2
export var SHUT_RD: const int = 0
export var SHUT_RDWR: const int = 2
export var SHUT_WR: const int = 1
export var SOCK_STREAM: const int = 1
export var SOCK_DGRAM: const int = 2
export var SOCK_SEQPACKET: const int = 5
export var SCM_RIGHTS: const int = 0x01
export var MSG_OOB: const int = 0x01
export var MSG_PEEK: const int = 0x02
export var MSG_DONTROUTE: const int = 0x04

##if platform == "linux"
	export var AF_INET6: const int = 10
	export var MSG_CTRUNC: const int = 0x08
	export var MSG_EOR: const int = 0x80
	export var MSG_NOSIGNAL: const int = 0x4000
	export var MSG_TRUNC: const int = 0x20
	export var MSG_WAITALL: const int = 0x0100
	export var SOL_SOCKET: const int = 1
	export var SO_ACCEPTCONN: const int = 30
	export var SO_BROADCAST: const int = 6
	export var SO_DEBUG: const int = 1
	export var SO_DONTROUTE: const int = 5
	export var SO_ERROR: const int = 4
	export var SO_KEEPALIVE: const int = 9
	export var SO_LINGER: const int = 13
	export var SO_OOBINLINE: const int = 10
	export var SO_RCVBUF: const int = 8
	export var SO_RCVLOWAT: const int = 18
	export var SO_RCVTIMEO: const int = 20
	export var SO_REUSEADDR: const int = 2
	export var SO_SNDBUF: const int = 7
	export var SO_SNDLOWAT: const int = 19
	export var SO_SNDTIMEO: const int = 21
	export var SO_TYPE: const int = 3
	export var SOMAXCONN: const int = 4096
##else if platform == "darwin"
	export var AF_INET6: const int = 30
	export var MSG_CTRUNC: const int = 0x20
	export var MSG_EOR: const int = 0x08
	export var MSG_NOSIGNAL: const int = 0x080000
	export var MSG_TRUNC: const int = 0x10
	export var MSG_WAITALL: const int = 0x40
	export var SOL_SOCKET: const int = 0xffff
	export var SO_ACCEPTCONN: const int = 0x0002
	export var SO_BROADCAST: const int = 0x0020
	export var SO_DEBUG: const int = 0x0001
	export var SO_DONTROUTE: const int = 0x0010
	export var SO_ERROR: const int = 0x1007
	export var SO_KEEPALIVE: const int = 0x0008
	export var SO_LINGER: const int = 0x0080
	export var SO_OOBINLINE: const int = 0x0100
	export var SO_RCVBUF: const int = 0x1002
	export var SO_RCVLOWAT: const int = 0x1004
	export var SO_RCVTIMEO: const int = 0x1006
	export var SO_REUSEADDR: const int = 0x0004
	export var SO_SNDBUF: const int = 0x1001
	export var SO_SNDLOWAT: const int = 0x1003
	export var SO_SNDTIMEO: const int = 0x1005
	export var SO_TYPE: const int = 0x1008
	export var SOMAXCONN: const int = 128
##end if

declare literal export function accept(socket: int, address: ptr sockaddr, addressLength: ptr socklen_t): int
declare literal export function bind(socket: int, address: ptr const sockaddr, addressLength: socklen_t): int
declare literal export function connect(socket: int, address: ptr const sockaddr, addressLength: socklen_t): int
declare literal export function getpeername(socket: int, address: ptr sockaddr, addressLength: ptr socklen_t): int
declare literal export function getsockname(socket: int, address: ptr sockaddr, addressLength: ptr socklen_t): int
declare literal export function getsockopt(socket: int, level: int, option: int, value: ptr void, valueLength: ptr socklen_t): int
declare literal export function listen(socket: int, backlog: int): int
declare literal export function recv(socket: int, data: ptr void, length: Size, flags: int): ssize_t
declare literal export function recvfrom(socket: int, data: ptr void, length: Size, flags: int, address: ptr sockaddr, addressLength: ptr socklen_t): ssize_t
declare literal export function recvmsg(socket: int, message: ptr msghdr, flags: int): ssize_t
declare literal export function send(socket: int, buffer: ptr const void, length: Size, flags: int): ssize_t
declare literal export function sendmsg(socket: int, message: ptr const msghdr, flags: int): ssize_t
declare literal export function sendto(socket: int, message: ptr const void, length: Size, flags: int, address: ptr const sockaddr, addressLength: socklen_t): ssize_t
declare literal export function setsockopt(socket: int, level: int, option: int, value: ptr const void, valueLength: socklen_t): int
declare literal export function shutdown(socket: int, mode: int): int
declare literal export function sockatmark(socket: int): int
declare literal export function socket(domain: int, type: int, protocol: int): int
declare literal export function socketpair(domain: int, type: int, protocol: int, array: ptr int): int
