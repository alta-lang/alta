import TCPSocket from "net"
import printLine, format from "io"
import String from "string"
import Vector from "vector"
import uint8, uint16 from "types"
import Address from "ip"
import parseNumber from "util"

#
# note that this is an example of a *blocking* TCP client
#

literal function main(argc: int, argv: ptr ptr byte): int {
	let args = new Vector<String>
	for i: int in 0..argc {
		args.push(argv[i])
	}

	if args.length < 2 {
		printLine("Usage: ", args[0], " <address> [port]")
		return 1
	}

	let port: uint16 = 8888

	if args.length > 2 {
		port = parseNumber<uint16>(args[2])
	}

	let conn = new TCPSocket

	conn.connect(args[1], port, block: true)

	printLine("Connected to ", args[1], ':', port)

	let serverMessage = *conn.receive(block: true)

	if serverMessage.length > 0 {
		printLine("Got a message from the server: ", new String(serverMessage.data, serverMessage.length))
	} else {
		printLine("Empty message from the server (usually indicates the connection was terminated)")
	}

	let message: String = format("Bonjour, ", args[1], ':', port)
	conn.send(message.data, message.length, block: true)

	return 0
}
