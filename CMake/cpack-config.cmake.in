if (CPACK_GENERATOR MATCHES "productbuild")
  set(CPACK_PACKAGING_INSTALL_PREFIX "/usr/local")
endif()

if (CPACK_GENERATOR MATCHES "DEB")
  get_cmake_property(CPACK_COMPONENTS_ALL COMPONENTS)
  list(APPEND CPACK_COMPONENTS_ALL "Debian")
endif()

if ((NOT WIN32) AND (NOT APPLE))
  get_cmake_property(CPACK_COMPONENTS_ALL COMPONENTS)
  list(APPEND CPACK_COMPONENTS_ALL "Linux")
endif()

if ((CPACK_GENERATOR MATCHES "NSIS") OR (CPACK_GENERATOR MATCHES "NSIS64") OR (CPACK_GENERATOR MATCHES "productbuild"))
  get_filename_component(README_DIR "${CPACK_RESOURCE_FILE_README}" DIRECTORY)
  get_filename_component(README_NAME "${CPACK_RESOURCE_FILE_README}" NAME_WLE)
  set(CPACK_RESOURCE_FILE_README "${README_DIR}/${README_NAME}.installer.txt")
endif()

execute_process(
  COMMAND git rev-parse --short=7 HEAD
  OUTPUT_VARIABLE ALTA_GIT_COMMIT
  OUTPUT_STRIP_TRAILING_WHITESPACE
)

if (APPLE)
  set(ALTA_SYSTEM_NAME "macos")
elseif (WIN32)
  set(ALTA_SYSTEM_NAME "windows")
elseif (UNIX)
  set(ALTA_SYSTEM_NAME "linux")
else()
  set(ALTA_SYSTEM_NAME "unknown")
endif()

if (@CMAKE_SIZEOF_VOID_P@ EQUAL 8)
  set(ALTA_SYSTEM_ARCHITECTURE "arch64")
else()
  set(ALTA_SYSTEM_ARCHITECTURE "arch32")
endif()

set(CPACK_PACKAGE_FILE_NAME "altac-${ALTA_GIT_COMMIT}-${ALTA_SYSTEM_NAME}-${ALTA_SYSTEM_ARCHITECTURE}")
