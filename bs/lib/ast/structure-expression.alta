import String from "string"
import Box from "memory"
import Vector from "vector"
import Pair from "util"

import Expression from "./expression.alta"
import Accessor from "./accessor.alta"
import SerialNode from "../serialization.alta"

export class StructureExpression extends Expression {
	public var target: Box<Accessor>
	public var arguments: Vector<Pair<String, Box<Expression>>>

	protected @override function serialize(): SerialNode {
		let serial = new SerialNode("StructureExpression")

		serial.setAttribute("target", this.target.proxy.serialize())

		for arg: Pair<String, Box<Expression>> in this.arguments.items {
			let child = new SerialNode("$Pair")
			child.setAttribute("first", new SerialNode(content: arg.first))
			child.setAttribute("second", arg.second.proxy.serialize())
			serial.addChild(child)
		}

		return serial
	}
}
