import Box from "memory"
import String from "string"
import Vector from "vector"
import uint8, Size from "types"
import numberToString from "util"

import Node from "./node.alta"
import Accessor from "./accessor.alta"
import SerialNode from "../serialization.alta"

export class Type extends Node {
	public var isReference = false
	public var isMutable = false
	public var target: Box<Accessor>
	public var pointerType: Box<Type>
	public var arrayType: Box<Type>

	protected @override function serialize(): SerialNode {
		let serial = new SerialNode("Type")

		serial.setAttribute("target", this.target.proxy.serialize())

		serial.setAttribute("isMutable", new SerialNode(content: this.isMutable ? "true" : "false"))
		serial.setAttribute("isReference", new SerialNode(content: this.isReference ? "true" : "false"))

		if this.pointerType {
			serial.setAttribute("pointerType", this.pointerType.proxy.serialize())
		}

		if this.arrayType {
			serial.setAttribute("arrayType", this.arrayType.proxy.serialize())
		}

		return serial
	}
}
