import Box from "memory"
import String from "string"
import Vector from "vector"

import RootStatement from "./root-statement.alta"
import Statement from "./statement.alta"
import Attribute from "./attribute.alta"
import Parameter from "./parameter.alta"
import SerialNode from "../serialization.alta"

export class FunctionDefinition extends RootStatement {
	public var name: String
	public var body: Box<Statement>
	public var attributes: Vector<Box<Attribute>>
	public var parameters: Vector<Box<Parameter>>

	protected @override function serialize(): SerialNode {
		let serial = new SerialNode("FunctionDefinition")
		let attrs = new SerialNode("$Array")

		serial["name"] = this.name

		for attribute: Box<Attribute> in this.attributes.items {
			attrs.children.push(attribute.proxy.serialize())
		}
		serial["attributes"] = attrs

		serial.children.push(this.body.proxy.serialize())

		return serial
	}
}
