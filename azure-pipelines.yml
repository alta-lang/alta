variables:
# TODO: fetch the version from the latest Git tag
- name: 'Alta.Version'
  value: '0.6.3'

jobs:
- job: Linux
  pool:
    vmImage: "ubuntu-latest"
  steps:
  # set up GCC 7 (required to build because we use C++17)
  # and install uuid-dev (dependency of crossguid)
  - script: |
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
      sudo apt-get update
      sudo apt-get install -y gcc-7 g++-7 uuid-dev
    displayName: "Install GCC 7 and uuid-dev"

  # if this is a tagged commit, build for release
  - task: CMake@1
    displayName: "Configure project with CMake (for release)"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/release')
    inputs:
      cmakeArgs: '-DCMAKE_C_COMPILER=/usr/bin/gcc-7 -DCMAKE_CXX_COMPILER=/usr/bin/g++-7 -DCMAKE_BUILD_TYPE=Release -DCPACK_OUTPUT_FILE_PREFIX="$(Build.ArtifactStagingDirectory)" ..'
  # otherwise, build for debug
  - task: CMake@1
    displayName: "Configure project with CMake (for debug)"
    condition: not(eq(variables['Build.SourceBranch'], 'refs/heads/release'))
    inputs:
      cmakeArgs: '-DCMAKE_C_COMPILER=/usr/bin/gcc-7 -DCMAKE_CXX_COMPILER=/usr/bin/g++-7 -DCMAKE_BUILD_TYPE=Debug -DCPACK_OUTPUT_FILE_PREFIX="$(Build.ArtifactStagingDirectory)" ..'

   # build it
  - task: CMake@1
    displayName: "Build project"
    inputs:
      cmakeArgs: "--build ."

  # package it
  - task: CMake@1
    displayName: "Package project"
    inputs:
      cmakeArgs: "--build . --target package"

  # publish the relevant artifacts
  - task: PublishPipelineArtifact@1
    displayName: "Publish the Debian package"
    inputs:
      artifactName: "altac-linux-amd64-debian"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-Linux.deb"
  - task: PublishPipelineArtifact@1
    displayName: "Publish the RPM package"
    inputs:
      artifactName: "altac-linux-amd64-rpm"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-Linux.rpm"
  - task: PublishPipelineArtifact@1
    displayName: "Publish the tar.gz package"
    inputs:
      artifactName: "altac-linux-amd64-tar-gz"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-Linux.tar.gz"
  - task: PublishPipelineArtifact@1
    displayName: "Publish the tar.xz package"
    inputs:
      artifactName: "altac-linux-amd64-tar-xz"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-Linux.tar.xz"

- job: Windows
  pool:
    vmImage: "windows-latest"
  steps:
  # configure it
  - task: CMake@1
    displayName: "Configure project with CMake"
    inputs:
      cmakeArgs: '-DCPACK_OUTPUT_FILE_PREFIX="$(Build.ArtifactStagingDirectory)" ..'

  # if this is a tagged commit, build for release
  # note: Visual Studio requires the build configuration type at build time,
  #       not configuration time (unlike Make on Linux and macOS)
  - task: CMake@1
    displayName: "Build project (for release)"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/release')
    inputs:
      cmakeArgs: "--build . --config Release"
  # otherwise, build for debug
  - task: CMake@1
    displayName: "Build project (for debug)"
    condition: not(eq(variables['Build.SourceBranch'], 'refs/heads/release'))
    inputs:
      cmakeArgs: "--build . --config Debug"

  # package it
  - task: CMake@1
    displayName: "Package project (for release)"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/release')
    inputs:
      cmakeArgs: "--build . --config Release --target package"
  - task: CMake@1
    displayName: "Package project (for debug)"
    condition: not(eq(variables['Build.SourceBranch'], 'refs/heads/release'))
    inputs:
      cmakeArgs: "--build . --config Debug --target package"

  # publish the relevant artifacts
  - task: PublishPipelineArtifact@1
    displayName: "Publish the installer package"
    inputs:
      artifactName: "altac-win64-msi"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-win64.msi"
  - task: PublishPipelineArtifact@1
    displayName: "Publish the 7Zip package"
    inputs:
      artifactName: "altac-win64-7z"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-win64.7z"
  - task: PublishPipelineArtifact@1
    displayName: "Publish the zip package"
    inputs:
      artifactName: "altac-win64-zip"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-win64.zip"

- job: macOS
  pool:
    vmImage: "macOS-latest"
  steps:
  # if this is a tagged commit, build for release
  - task: CMake@1
    displayName: "Configure project with CMake (for release)"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/release')
    inputs:
      cmakeArgs: '-DCMAKE_BUILD_TYPE=Release -DCPACK_OUTPUT_FILE_PREFIX="$(Build.ArtifactStagingDirectory)" ..'

  # otherwise, build for debug
  - task: CMake@1
    displayName: "Configure project with CMake (for debug)"
    condition: not(eq(variables['Build.SourceBranch'], 'refs/heads/release'))
    inputs:
      cmakeArgs: '-DCMAKE_BUILD_TYPE=Debug -DCPACK_OUTPUT_FILE_PREFIX="$(Build.ArtifactStagingDirectory)" ..'

  # build it
  - task: CMake@1
    displayName: "Build project"
    inputs:
      cmakeArgs: "--build ."

  # package it
  - task: CMake@1
    displayName: "Package project"
    inputs:
      cmakeArgs: "--build . --target package"

  # publish the relevant artificats
  - task: PublishPipelineArtifact@1
    displayName: "Publish the installer package"
    inputs:
      artifactName: "altac-macos-pkg"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-Darwin.pkg"
  - task: PublishPipelineArtifact@1
    displayName: "Publish the installer package"
    inputs:
      artifactName: "altac-macos-zip"
      targetPath: "$(Build.ArtifactStagingDirectory)/Alta-$(Alta.Version)-Darwin.zip"
